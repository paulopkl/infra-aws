# Retrieve an authentication token and authenticate your Docker client to your registry.

# Use the AWS CLI:
> aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 344743739159.dkr.ecr.us-east-1.amazonaws.com

# Note: If you receive an error using the AWS CLI, make sure that you have the latest version of the AWS CLI and Docker installed.

# Build your Docker image using the following command. For information on building a Docker file from scratch see the instructions here
# . You can skip this step if your image is already built:
> docker build -t frontend_service .
> docker build -t backend_service .
> docker build -t golang_microservice_service .

# After the build completes, tag your image so you can push the image to this repository:
> docker tag test_service:latest 344743739159.dkr.ecr.us-east-1.amazonaws.com/frontend_service:latest
> docker tag test_service:latest 344743739159.dkr.ecr.us-east-1.amazonaws.com/backend_service:latest
> docker tag test_service:latest 344743739159.dkr.ecr.us-east-1.amazonaws.com/golang_microservice_service:latest

# Run the following command to push this image to your newly created AWS repository:
> docker push 344743739159.dkr.ecr.us-east-1.amazonaws.com/frontend_service:latest
> docker push 344743739159.dkr.ecr.us-east-1.amazonaws.com/backend_service:latest
> docker push 344743739159.dkr.ecr.us-east-1.amazonaws.com/golang_microservice_service:latest
