# docker stack deploy -c docker-compose.portainer.yaml portainer

version: "3.8"

services:
  agent:
    # container_name: agent
    # hostname: agent
    image: portainer/agent:2.19.4 # 2.19.4-alpine | latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    # environment:
    #   AGENT_CLUSTER_ADDR: localhost
    networks:
      - agent_network
      # - traefik_production
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    container_name: portainer
    hostname: portainer
    image: portainer/portainer-ce:2.19.4 # 2.19.4-alpine | latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    # ports:
      # - 8000:8000
      # - 9000:9000
      # - 9443:9443
    volumes:
      - portainer_data:/data
      # - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - nginx_proxy_manager
      - agent_network
      # - traefik_production
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      # resources:
      #   limits:
      #     cpus: '0.3'
      #     memory: 256M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik_production"
        - "traefik.http.routers.portainer.rule=Host(`portainer.teste-application.com`)"
        - "traefik.http.services.portainer.loadbalancer.server.scheme=http"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.routers.portainer.entrypoints=web"
        # - "traefik.http.routers.portainer.entrypoints=websecure"
        # - "traefik.http.routers.portainer.priority=1"
        # - "traefik.http.services.portainer.loadbalancer.server.port=9443"
        #- "traefik.http.routers.portainer.tls.certresolver=le"
        # AMQPS - SSL terminated by traefik
        # - "traefik.tcp.routers.mq-connect.rule=HostSNI(`mq-connect.mydomain`)"
        # - "traefik.tcp.services.mq-connect.loadbalancer.server.port=5672"
        # - "traefik.tcp.routers.mq-connect.entrypoints=rabbitmq"
        # - "traefik.tcp.routers.mq-connect.tls.certresolver=mytlschallenge"
        # - "traefik.tcp.routers.mq-connect.service=mq-connect"

networks:
  nginx_proxy_manager:
    external: true
    # attachable: true
  agent_network:
    external: true
    # attachable: true
  # traefik_production:
    # external: true

volumes:
  portainer_data:
