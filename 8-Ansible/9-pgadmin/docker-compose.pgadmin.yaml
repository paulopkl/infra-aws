# docker stack deploy -c docker-compose.portainer.yaml portainer

x-postgres-pgadmin-env-variables: &postgres-pgadmin-env-variables
  PGADMIN_DEFAULT_EMAIL: "veridianaquirino.ti@gmail.com"
  PGADMIN_DEFAULT_PASSWORD: "123456"
  PGADMIN_LISTEN_PORT: "80"
  # SCRIPT_NAME: /pgadmin

version: "3.8"

services:
  pgadmin:
    # container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      <<: *postgres-pgadmin-env-variables
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    # ports:
    #   - 8181:80
    networks:
      - nginx_proxy_manager
      - keycloak
      # - traefik_production
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik_production"
        - "traefik.http.routers.pgadmin.rule=Host(`pg.teste-application.com`)"
        - "traefik.http.routers.pgadmin.service=pgadmin"
        - "traefik.http.routers.pgadmin.entrypoints=web"
        - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
        # - "traefik.http.routers.pgadmin.rule=Host(`pg.teste-application.com`) && PathPrefix(`/pgadmin4`)"
        # - "traefik.http.routers.pgadmin.entrypoints=websecure"
        # - "traefik.http.routers.pgadmin.priority=2"
        # - "traefik.http.routers.pgadmin.tls.certresolver=le"
        # - "traefik.http.routers.pgadmin.tls=true"

volumes:
  pgadmin_data:

networks:
  nginx_proxy_manager:
    external: true
    # attachable: true
  keycloak:
    external: true
  # traefik_production:
  #   external: true
